// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PUBLIC_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  firstname String
  lastname  String
  password  Password?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  folders   Folder[]
}

model File {
  id        Int      @id @default(autoincrement())
  filename  String
  fileSize  BigInt
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  folderId  Int
  fileLink  String
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  files File[]

  @@unique([userId, name])
  @@index([userId])
}

model Password {
  id     Int    @id @default(autoincrement())
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}
